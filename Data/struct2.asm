; Generated by Lang compiler

GLOBAL main

SECTION .code
line_squared_length:
    push rbp ; save RBP
    mov rbp, rsp ; stack frame
    mov QWORD [rbp + 16], rcx ; push arg 0 
    sub rsp, 16 ; reserve stack space for 2 locals
    mov rbx, QWORD [rbp + 16]
    add rbx, 8 ; member offset 'end'
    add rbx, 0 ; member offset 'x'
    movss xmm4, DWORD [rbx]
    mov rbx, QWORD [rbp + 16]
    add rbx, 0 ; member offset 'start'
    add rbx, 0 ; member offset 'x'
    movss xmm5, DWORD [rbx]
    subss xmm4, xmm5
    lea rbx, QWORD [rbp + -16] ; get address of 'dx'
    movss DWORD [rbx], xmm4
    
    mov rbx, QWORD [rbp + 16]
    add rbx, 8 ; member offset 'end'
    add rbx, 4 ; member offset 'y'
    movss xmm4, DWORD [rbx]
    mov rbx, QWORD [rbp + 16]
    add rbx, 0 ; member offset 'start'
    add rbx, 4 ; member offset 'y'
    movss xmm5, DWORD [rbx]
    subss xmm4, xmm5
    lea rbx, QWORD [rbp + -12] ; get address of 'dy'
    movss DWORD [rbx], xmm4
    
    movss xmm5, DWORD [rbp + -16]
    movss xmm6, DWORD [rbp + -16]
    mulss xmm5, xmm6
    movss xmm6, DWORD [rbp + -12]
    movss xmm7, DWORD [rbp + -12]
    mulss xmm6, xmm7
    addss xmm5, xmm6
    movss xmm0, xmm5 ; return via xmm0
    jmp L_function_line_squared_length_exit
    
    xor rax, rax ; Default return value 0
    L_function_line_squared_length_exit:
    mov rsp, rbp
    pop rbp
    ret
    

main:
    push rbp ; save RBP
    mov rbp, rsp ; stack frame
    sub rsp, 16 ; reserve stack space for 1 locals
    lea rdi, QWORD [rbp + -16] ; zero initialize 'line'
    xor rax, rax
    mov ecx, 16
    rep stosb
    
    lea rbx, QWORD [rbp + -16] ; get address of 'line'
    add rbx, 0 ; member offset 'start'
    add rbx, 0 ; member offset 'x'
    movss xmm4, DWORD [REL lit_flt_0]
    movss DWORD [rbx], xmm4
    
    lea rbx, QWORD [rbp + -16] ; get address of 'line'
    add rbx, 0 ; member offset 'start'
    add rbx, 4 ; member offset 'y'
    movss xmm4, DWORD [REL lit_flt_1]
    movss DWORD [rbx], xmm4
    
    lea rbx, QWORD [rbp + -16] ; get address of 'line'
    add rbx, 8 ; member offset 'end'
    add rbx, 0 ; member offset 'x'
    movss xmm4, DWORD [REL lit_flt_2]
    movss DWORD [rbx], xmm4
    
    lea rbx, QWORD [rbp + -16] ; get address of 'line'
    add rbx, 8 ; member offset 'end'
    add rbx, 4 ; member offset 'y'
    movss xmm4, DWORD [REL lit_flt_3]
    movss DWORD [rbx], xmm4
    
    sub rsp, 32 ; reserve shadow space and 1 arguments
    lea rbx, QWORD [rbp + -16] ; get address of 'line'
    mov rcx, rbx ; arg 1
    call line_squared_length
    add rsp, 32 ; pop arguments
    movss xmm4, xmm0 ; get return value (f32)
    cvttss2si rbx, xmm4
    mov rax, rbx ; return via rax
    jmp L_function_main_exit
    
    xor rax, rax ; Default return value 0
    L_function_main_exit:
    mov rsp, rbp
    pop rbp
    ret
    


SECTION .data
lit_flt_0 dq 40000000h ; 2.000000f
lit_flt_1 dq 3f800000h ; 1.000000f
lit_flt_2 dq 40a00000h ; 5.000000f
lit_flt_3 dq 40000000h ; 2.000000f
