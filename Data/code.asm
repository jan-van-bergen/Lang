; Generated by Lang compiler

GLOBAL main

SECTION .code
main:
    push rbp ; save RBP
    mov rbp, rsp ; stack frame
    sub rsp, 16 ; reserve stack space for locals
    mov rbx, 1
    mov DWORD [rbp + -4], ebx; initialize a
    mov DWORD [rbp + -8], 0; zero initialize b
    mov ebx, DWORD [rbp + -4] ; get value of a
    mov r10, 0
    cmp rbx, r10
    jle L0
    mov rbx, 1
    jmp L1
    L0:
    mov rbx, 0
    L1:
    cmp rbx, 0
    je L_else2
        lea rbx, QWORD [rbp + -8] ; get address of b
        mov r10, 3
        mov DWORD [rbx], r10d
    jmp L_exit2
    L_else2:
        lea rbx, QWORD [rbp + -8] ; get address of b
        mov r10, 2
        mov DWORD [rbx], r10d
    L_exit2:
    mov ebx, DWORD [rbp + -8] ; get value of b
    mov rax, rbx ; return via rax
    jmp L_function_main_exit
    xor rax, rax ; Default return value 0
    L_function_main_exit:
    mov rsp, rbp
    pop rbp
    ret
    
SECTION .data
