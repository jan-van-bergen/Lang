extern GetProcessHeap;
extern HeapAlloc;
extern HeapFree;

extern GetStdHandle;
extern WriteFile;

extern ExitProcess;

let NULL: int = 0;

let heap: heap;

func malloc(size: int) -> ptr {
	if (heap == NULL) {
		heap = GetProcessHeap();
	}
	
	return HeapAlloc(heap, 0, size);
}

func main() -> int {
	let mem: ptr = malloc(32);
	
	*(mem + 0) = 'B';
	*(mem + 1) = 'r';
	*(mem + 2) = 'u';
	*(mem + 3) = 'h';
	*(mem + 4) = 'T';
	*(mem + 5) = 'e';
	*(mem + 6) = 's';
	*(mem + 7) = 't';
	*(mem + 8) = 0;

	return *mem;

	// let str_len: int = 0;
	
	// while (*(mem + str_len) != NULL) str_len = str_len + 1;

	// return str_len;
}
