; Generated by Lang compiler

GLOBAL main

SECTION .code
EXTERN GetProcessHeap

EXTERN HeapAlloc

EXTERN HeapFree

EXTERN GetStdHandle

EXTERN WriteFile

EXTERN ExitProcess

malloc:
    mov QWORD [rsp + 1 * 8], rcx
    sub rsp, 0 * 8 + 8; 0 vars + alignment
    mov rbx, QWORD [REL heap] ; get heap
    mov r10, QWORD [REL NULL] ; get NULL
    cmp rbx, r10
    jne L0
    mov rbx, 1
    jmp L1
    L0:
    mov rbx, 0
    L1:
    cmp rbx, 0
    je L_exit2
        sub rsp, 32 ; shadow space
        call GetProcessHeap
        add rsp, 4 * 8
        mov rbx, rax ; get return value
        lea r10, QWORD [REL heap] ; addr of heap
        mov QWORD [r10], rbx
    L_exit2:
    sub rsp, 32 ; shadow space
    mov rbx, QWORD [REL heap] ; get heap
    mov rcx, rbx ; arg 0
    mov rbx, 0
    mov rdx, rbx ; arg 1
    mov rbx, QWORD [rsp + 6 * 8] ; get size
    mov r8, rbx ; arg 2
    call HeapAlloc
    add rsp, 4 * 8
    mov rbx, rax ; get return value
    mov rax, rbx ; return via rax
    jmp L_function_malloc_exit
    xor rax, rax ; Default return value 0
    L_function_malloc_exit:
    add rsp, 8
    ret
    
main:
    sub rsp, 1 * 8; 1 vars
    sub rsp, 32 ; shadow space
    mov rbx, 32
    mov rcx, rbx ; arg 0
    call malloc
    add rsp, 4 * 8
    mov rbx, rax ; get return value
    mov QWORD [rsp + 0 * 8], rbx; initialize mem
    mov rbx, 66
    mov r10, QWORD [rsp + 0 * 8] ; get mem
    mov r11, 0
    add r10, r11
    mov QWORD [r10], rbx
    mov rbx, 114
    mov r10, QWORD [rsp + 0 * 8] ; get mem
    mov r11, 1
    add r10, r11
    mov QWORD [r10], rbx
    mov rbx, 117
    mov r10, QWORD [rsp + 0 * 8] ; get mem
    mov r11, 2
    add r10, r11
    mov QWORD [r10], rbx
    mov rbx, 104
    mov r10, QWORD [rsp + 0 * 8] ; get mem
    mov r11, 3
    add r10, r11
    mov QWORD [r10], rbx
    mov rbx, 84
    mov r10, QWORD [rsp + 0 * 8] ; get mem
    mov r11, 4
    add r10, r11
    mov QWORD [r10], rbx
    mov rbx, 101
    mov r10, QWORD [rsp + 0 * 8] ; get mem
    mov r11, 5
    add r10, r11
    mov QWORD [r10], rbx
    mov rbx, 115
    mov r10, QWORD [rsp + 0 * 8] ; get mem
    mov r11, 6
    add r10, r11
    mov QWORD [r10], rbx
    mov rbx, 116
    mov r10, QWORD [rsp + 0 * 8] ; get mem
    mov r11, 7
    add r10, r11
    mov QWORD [r10], rbx
    mov rbx, 0
    mov r10, QWORD [rsp + 0 * 8] ; get mem
    mov r11, 8
    add r10, r11
    mov QWORD [r10], rbx
    mov rbx, QWORD [rsp + 0 * 8] ; get mem
    mov rbx, QWORD [rbx]
    mov rax, rbx ; return via rax
    jmp L_function_main_exit
    xor rax, rax ; Default return value 0
    L_function_main_exit:
    add rsp, 8
    ret
    
SECTION .data
NULL dq 0
heap dq 0
