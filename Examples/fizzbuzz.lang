extern GetStdHandle(std_handle: int) -> void *;
extern WriteFile(handle: void *, buffer: void *, bytes_to_write: int, bytes_written: int *, overlapped: u64) -> bool;
extern strlen(str: char *) -> int;

STD_OUTPUT_HANDLE := -11;

func print(str: char *, str_len: int) -> void {
	std_handle: int * = GetStdHandle(STD_OUTPUT_HANDLE);

	bytes_written: int;
	WriteFile(std_handle, str, str_len, &bytes_written, 0);
}

func print_num(num: int) -> void {
	num_str: char * = "         ";
	idx: int = 0;

	while (num > 0) {
		digit: char = cast(char) (num % 10);
		
		*(num_str + idx) = digit + '0';
		
		num = num / 10;
		idx = idx + 1;
	}
	
	i: int = 0;

	while (i < idx / 2) {
		tmp: char = *(num_str + i);
		*(num_str + i) = *(num_str + idx - i - 1);
		*(num_str + idx - i - 1) = tmp;

		i++;
	}
	
	*(num_str + idx) = ' ';
	
	print(num_str, idx + 1);
}

func fizzbuzz(n: int) -> void {
	i: int = 1;

	while (i <= n) {
		divisible_by_3: bool = i % 3 == 0;
		divisible_by_5: bool = i % 5 == 0;

		if (divisible_by_5 && divisible_by_3) {
			print("fizzbuzz ", 9);
		} else if (divisible_by_5) {
			print("fizz ", 5);
		} else if (divisible_by_3) {
			print("buzz ", 5);
		} else {
			print_num(i);
		}

		i++;
	}
}

func main() -> void {
	fizzbuzz(20);
}
