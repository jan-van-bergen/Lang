; Generated by Lang compiler

GLOBAL main

SECTION .code
main:
    push rbp ; save RBP
    mov rbp, rsp ; stack frame
    sub rsp, 16 ; reserve stack space for 1 locals
    lea rdi, QWORD [rbp + -16] ; zero initialize 'test'
    xor rax, rax
    mov ecx, 16
    rep stosb
    
    lea rbx, QWORD [rbp + -16] ; get address of 'test'
    add rbx, 0 ; member offset 'a'
    mov r10, 3
    mov QWORD [rbx], r10
    
    lea rbx, QWORD [rbp + -16] ; get address of 'test'
    add rbx, 8 ; member offset 'b'
    mov r10, 4
    mov DWORD [rbx], r10d
    
    lea rbx, QWORD [rbp + -16] ; get address of 'test'
    add rbx, 12 ; member offset 'c'
    mov r10, 5
    mov DWORD [rbx], r10d
    
    lea rbx, QWORD [rbp + -16] ; get address of 'test'
    add rbx, 8 ; member offset 'b'
    movsx rbx, DWORD [rbx]
    mov rax, rbx ; return via rax
    jmp L_function_main_exit
    
    xor rax, rax ; Default return value 0
    L_function_main_exit:
    mov rsp, rbp
    pop rbp
    ret
    


SECTION .data
