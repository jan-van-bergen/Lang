extern malloc(size: int) -> void *;
extern free(ptr: void *);

extern fopen(name: char *, mode: char *) -> void *;
extern fclose(handle: void *);

extern fsize(handle: void *) -> int;

extern fread (handle: void *, bytes: char *, num_bytes: int) -> bool;
extern fwrite(handle: void *, bytes: char *, num_bytes: int) -> bool;

extern puts(str: char *);
extern strlen(str: char *) -> int;

func main() -> int {
	file_name := "TEST.TXT";

	handle := fopen(file_name, "w");
	if (handle == cast(void *) -1) {
		puts("Unable to open file for writing!\n");
		return -1;
	}

	str := "test123";
	len := strlen(str);

	success := fwrite(handle, str, len);
	if (!success) {
		puts("Unable to write file!\n");
		return -1;
	}

	fclose(handle);

	handle = fopen(file_name, "r");
	if (handle == cast(void *) -1) {
		puts("Unable to open file for reading!\n");
		return -1;
	}

	size := fsize(handle);
	buf  := cast(u8 *) malloc(size + 1);

	success = fread(handle, buf, size);
	if (!success) {
		puts("Unable to read file!\n");
		return -1; 
	}

	fclose(handle);

	buf[size] = '\0';
	puts(buf);
	free(buf);

	return 0;
}
