; Generated by Lang compiler

extern GetCommandLineA
extern ExitProcess

section .code
global _start
_start:
    call GetCommandLineA
    mov rcx, rax
    call main
    mov ecx, eax
    call ExitProcess

main:
    push rbp ; save RBP
    mov rbp, rsp ; stack frame
    sub rsp, 16 ; reserve stack space for 3 locals
    
    ; let a: u32; a = 48;
    lea rbx, QWORD [rbp + -16] ; get address of 'a'
    mov r10, 48
    mov DWORD [rbx], r10d
    
    ; let b: u32; b = 3;
    lea rbx, QWORD [rbp + -12] ; get address of 'b'
    mov r10, 3
    mov DWORD [rbx], r10d
    
    ; let c: u32; c = a / b;
    mov ebx, DWORD [rbp + -16]
    mov r10d, DWORD [rbp + -12]
    mov rax, rbx
    cqo
    idiv r10
    mov rbx, rax
    lea r10, QWORD [rbp + -8] ; get address of 'c'
    mov DWORD [r10], ebx
    
    ; if (c != 16)
    mov ebx, DWORD [rbp + -8]
    mov r10, 16
    cmp rbx, r10
    setne bl
    and bl, 1
    movzx rbx, bl
    cmp rbx, 0
    je L_exit0
        ; return 0
        mov rbx, 0
        mov rax, rbx ; return via rax
        jmp L_function_main_exit
        
    L_exit0:
    
    ; b = 4
    lea rbx, QWORD [rbp + -12] ; get address of 'b'
    mov r10, 4
    mov DWORD [rbx], r10d
    
    ; c = c / b
    mov ebx, DWORD [rbp + -8]
    mov r10d, DWORD [rbp + -12]
    mov rax, rbx
    cqo
    idiv r10
    mov rbx, rax
    lea r10, QWORD [rbp + -8] ; get address of 'c'
    mov DWORD [r10], ebx
    
    ; if (c != 4)
    mov ebx, DWORD [rbp + -8]
    mov r10, 4
    cmp rbx, r10
    setne bl
    and bl, 1
    movzx rbx, bl
    cmp rbx, 0
    je L_exit1
        ; return 0
        mov rbx, 0
        mov rax, rbx ; return via rax
        jmp L_function_main_exit
        
    L_exit1:
    
    ; c = c / c
    mov ebx, DWORD [rbp + -8]
    mov r10d, DWORD [rbp + -8]
    mov rax, rbx
    cqo
    idiv r10
    mov rbx, rax
    lea r10, QWORD [rbp + -8] ; get address of 'c'
    mov DWORD [r10], ebx
    
    ; return c
    mov ebx, DWORD [rbp + -8]
    mov rax, rbx ; return via rax
    jmp L_function_main_exit
    
    xor rax, rax ; Default return value 0
    L_function_main_exit:
    mov rsp, rbp
    pop rbp
    ret
    


section .data
